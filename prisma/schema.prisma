// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int          @id @default(autoincrement())
  name      String       @unique

  products  Product[]

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Product {
  id              Int       @id @default(autoincrement())
  name            String
  price           Float
  quantity        Int
  img             String[]

  categoryId      Int
  category        Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
     
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model User {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  role        Role     @default(USER)
  status      Status   @default(INACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sessions    Session[] 
}

model Session {
  id         Int      @id @default(autoincrement())
  userId     Int
  ipAddress  String
  deviceInfo String?
  location   String
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
  BLOCKED
}